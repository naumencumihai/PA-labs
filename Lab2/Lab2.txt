Laborator 2 - PA
Naumencu Mihai, 322 CD

(1) Turnurile din Hanoi:

A: 3 2 1
B:
C:
---
A: 3 2
B: 1
C: 
---
A: 3
B: 1
C: 2
---
A: 3
B:
C: 2 1
---
A: 
B: 3
C: 2 1
---
A: 1
B: 3
C: 2
---
A: 1
B: 3 2
C: 
---
A: 
B: 3 2 1
C: 


(2) Maximul elementelor unui vector

vector: {3, 2, 5, 2, 4}
apel recursiv stanga:
	vector: {3, 2}
	apel recursiv stanga:
		vector: {3}
	apel recurtsiv dreapta:
		vector: {2}
	maxim stanga = 3
apel recursiv dreapta:
	vector: {5, 2, 4}
	apel recursiv stanga:
		vector: {5}
	apel recursiv dreapta:
		vector: {2, 4}
		apel recursiv stanga:
			vector: {2}
		apel recurtsiv dreapta:
			vector; {4}
		maxim dreapta dreapta = 4
	maxim dreapta = 5
maxim total = 5


(3) Sortare prin interclasare

vector: {3, 2, 1, 4, 3, 5, 2}
stanga:
	{3, 2, 1}
	stanga:
		{3}
	dreapta:
		{2, 1}
		stanga:
			{2}
		dreapta:
			{1}
		combina
		=> {1, 2}
	combina
	=> {1, 2, 3}
dreapta:
	{4, 3, 5, 2}
	stanga:
		{4, 3}
		stanga:
			{4}
		dreapta:
			{3}
		combina
		=> {3, 4}
	dreapta:
		{5, 2}
		stanga:
			{5}
		dreapta:
			{2}
		combina
		=> {2, 5}
	combina
	=> {2, 3, 4, 5}
combina
=> {1, 2, 2, 3, 3, 4, 5}


(4) Cautare binara

vector: {1, 3, 4, 5, 6, 7, 8, 9}; x = 3
vector[mijloc] = 5; x < 5
-> stanga:
	{1, 3, 4, 5}
	vector[mijloc] = 3; x == 3
	=> pozitia lui x == 2 (1 incepand de la 0)


(5) Numar aparitii

vector: {2, 1, 3, 1, 1, 4, 2, 1, 8, 1}; x = 1
stanga:
	{2, 1, 3, 1, 1}
	stanga:
		{2, 1, 3}
		stanga:
			{2, 1}
			stanga:
				{2}
				returneaza 0
			dreapta:
				{1}
				returneaza 1

			returneaza 1
		dreapta:
			{3}
			returneaza 0

		returneaza 1
	dreapta:
		{1, 1}
		stanga:
			{1}
			returneaza 1
		dreapta
			{1}
			returneaza 1

		returneaza 2

	returneaza 3 (1 + 2)
dreapta:
	{4, 2, 1, 8, 1}
	stanga:
		{4, 2, 1}
		stanga:
			{4, 2}
			stanga:
				{4}
				returneaza 0
			dreapta:
				{2}
				returneaza 0
		dreapta:
			{1}
			returneaza 1

		returneaza 1
	dreapta:
		{8, 1}
		stanga;
			{8}
			returneaza 0
		dreapta:
			{1}
			returneaza 1

		returneaza 1

	returneaza 2 (1 + 1)

returneaza 5 (3 + 2)
